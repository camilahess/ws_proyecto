package com.example.ecommerce.productos;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

import com.example.ecommerce.categorias.Categoria;
import com.example.ecommerce.categorias.CategoriasRepository;
import com.example.ecommerce.productos.proyecciones.ProductoConCategoria;
import com.example.ecommerce.productos.proyecciones.ProductoSinCategoria;
import com.example.ecommerce.categorias.proyecciones.CategoriaSinProductos;
import lombok.RequiredArgsConstructor;


@Service
public class ProductosService {

	@Autowired
    private ProductosRepository produRepository;
	
	@Autowired
    private CategoriasRepository catRepository;

        
    public List<ProductoSinCategoria> getProductos(int idCat) {
        return produRepository.findByCategory(idCat);
    }

    public ProductoConCategoria getProducto(int idProd) {
        return produRepository.findProductoById(idProd).orElseThrow(
            () -> new ResponseStatusException(HttpStatus.NOT_FOUND, "Producto no encontrado")
        );
    }

    public Producto insertProducto(Producto p, int idCat) {
        Categoria c = catRepository.findById(idCat).orElseThrow(
            () -> new ResponseStatusException(HttpStatus.NOT_FOUND, "Categoria no encontrada")
        );
        c.setProductos(null);
        p.setCategoria(c);
        return produRepository.save(p);
    }

    public void deleteProducto(int id) {
        produRepository.deleteById(id);
    }
    
    public List<ProductoConCategoria> getAllProductosConCategoria() {
        List<Producto> productos = produRepository.findAll();
        List<ProductoConCategoria> productosConCategoria = new ArrayList<>();

        for (Producto producto : productos) {
            Categoria categoria = producto.getCategoria();
            ProductoConCategoria productoConCategoria = new ProductoConCategoria(
                    producto.getId(),
                    producto.getNombre(),
                    producto.getPrecio(),
                    producto.getDescripcion(),
                    new CategoriaSinProductos(categoria.getId(), categoria.getNombre())
            );
            productosConCategoria.add(productoConCategoria);
        }

        return productosConCategoria;
    }
}
