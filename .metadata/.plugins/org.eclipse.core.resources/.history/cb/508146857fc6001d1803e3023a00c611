package com.example.ecommerce.productos;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

import com.example.ecommerce.categorias.Categoria;
import com.example.ecommerce.categorias.CategoriasRepository;
import com.example.ecommerce.productos.proyecciones.ProductoConCategoria;
import com.example.ecommerce.productos.proyecciones.ProductoSinCategoria;



@Service
public class ProductosService {

	@Autowired
    private ProductosRepository produRepository;
	
	@Autowired
    private CategoriasRepository catRepository;

        
    public List<ProductoSinCategoria> getProductos(int idCat) {
        return produRepository.findByCategory(idCat);
    }

    public ProductoSinCategoria getProducto(int id) {
        return produRepository.findProductoById(id).orElseThrow(
            () -> new ResponseStatusException(HttpStatus.NOT_FOUND, "Producto no encontrado")
        );
    }

    public Producto insertProducto(Producto p, int idCat) {
        Categoria c = catRepository.findById(idCat).orElseThrow(
            () -> new ResponseStatusException(HttpStatus.NOT_FOUND, "Categoria no encontrada")
        );
        c.setProductos(null);
        p.setCategoria(c);
        return produRepository.save(p);
    }

//    //-------------------------------------------------------- MODIFICAR PRODUCTO
//    public Producto updateProducto(Producto p, int id){
//      p.setId(id);
//      return produRepository.save(p);
//    }
//    
    public Producto updateProducto(Producto p) {
        Producto productoActualizado = produRepository.findById(p.getId()).orElseThrow(
            () -> new ResponseStatusException(HttpStatus.NOT_FOUND, "Producto no encontrado")
        );

        // Actualizar los campos del producto
        if (p.getNombre() != null) {
            productoActualizado.setNombre(p.getNombre());
        }
        if (p.getDescripcion() != null) {
            productoActualizado.setDescripcion(p.getDescripcion());
        }
        if (p.getPrecio() != null) {
            productoActualizado.setPrecio(p.getPrecio());
        }
        if (p.getCategoria() != null) {
            productoActualizado.setCategoria(p.getCategoria());
        }

        return produRepository.save(productoActualizado);
    }
    
    public void deleteProducto(int id) {
        produRepository.deleteById(id);
    }
    
    
}
