package com.example.ecommerce.categorias;


import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.example.ecommerce.categorias.proyecciones.CategoriaConProductos;
import com.example.ecommerce.categorias.proyecciones.CategoriaSinProductos;
import com.example.ecommerce.productos.Producto;
import com.example.ecommerce.productos.ProductosService;
import com.example.ecommerce.productos.proyecciones.ProductoSinCategoria;

import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;

@RestController
@RequestMapping("/categorias")
@RequiredArgsConstructor
public class CategoriasController {
	
	private final CategoriasService catService;
	private final ProductosService produService;
	
    @GetMapping
    public List<CategoriaSinProductos> getCategories(@RequestParam(required = false) String nombre) {
        if(nombre != null) {
            return catService.getCategoriesByName(nombre);
        } else {
            return catService.getCategories();
        }
    }

    @GetMapping("/{id}")
    public CategoriaConProductos getCategory(@PathVariable int id) {
        return catService.getCategory(id);
    }

    @PostMapping
    @ResponseStatus(HttpStatus.CREATED)
    public Categoria insertCategory(@RequestBody Categoria c) {
        return catService.insert(c);
    }

    @PutMapping("/{id}")
    public Categoria updateCategory(@RequestBody Categoria c, @PathVariable int id) {
        return catService.update(c, id);
    }

    @DeleteMapping("/{id}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void deleteCategory(@PathVariable int id) {
        catService.delete(id);
    }

    // Devuelve todos los productos de una categoría
    @GetMapping("/{idCat}/products")
    public List<ProductoSinCategoria> getProducts( @PathVariable int idCat) {
        return produService.getProducts(idCat);
    }

    // Inserta un producto en una categoría
    @PostMapping("/{idCat}/products")
    public Producto insertProduct(@RequestBody Producto p, @PathVariable int idCat) {
        return productosService.insertProduct(p, idCat);
    }

    // Borra un producto de una categoría
    @DeleteMapping("/{idCat}/products/{idProd}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void deleteProduct(@PathVariable int idProd) {
        productosService.deleteProduct(idProd);
    }
}
