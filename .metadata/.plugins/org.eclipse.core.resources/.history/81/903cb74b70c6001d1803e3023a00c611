package com.example.ecommerce.productos;

import java.util.List;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.example.ecommerce.productos.proyecciones.ProductoConCategoria;
import com.example.ecommerce.productos.proyecciones.ProductoSinCategoria;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;



@RestController
@RequestMapping("/productos")
@CrossOrigin(origins = "http://localhost:4200") // agregamos crossorigin para acceder desde el front
public class ProductosController {

	@Autowired
    private ProductosService produService;
	@Autowired
	private ProductosRepository produRepository;

	// ---------------------------------------------- LISTAR TODOS LAS PRODUCTOS SIN CATEGORA
	@GetMapping
    public List<Producto> getProductos() {
        return produRepository.findAllProductosConCategoria();
    }

//    @GetMapping
//    public List<ProductoSinCategoria> getProductos(@RequestParam int categoria) {
//        return produService.getProductos(categoria);
//    }

    @GetMapping("/{id}")
    public ProductoConCategoria getProducto(@PathVariable int id) {
        return produService.getProducto(id);
    }

    @PostMapping()
    public Producto insertProducto(@RequestBody Producto p) {
        return produService.insertProducto(p, p.getCategoria().getId());
    }

    @DeleteMapping("/{idProd}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void deleteProducto(@PathVariable int idProd) {
        produService.deleteProducto(idProd);
    }
}
